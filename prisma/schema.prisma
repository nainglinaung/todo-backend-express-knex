// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Task {
  id             Int      @id @default(autoincrement())
  title          String
  description    String?
  completed      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userId         Int
  user           User     @relation(fields: [userId], references: [id])
  organizationId Int
  organization   Organization? @relation(fields: [organizationId], references: [id])
  projectId      Int?
  project        Project? @relation(fields: [projectId], references: [id])
}

model User {
  id             Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  password       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  tasks          Task[]
  organizationId Int?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  projects       Project[] @relation("UserProjects")
}
model Project {
  id             Int      @id @default(autoincrement())
  name           String
  description    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  organizationId Int
  organization   Organization @relation(fields: [organizationId], references: [id])
  tasks          Task[]
  users          User[] @relation("UserProjects")
  userId        Int
}

model Organization {
  id        Int      @id @default(autoincrement())
  name      String
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
  tasks     Task[]
  projects  Project[]
}